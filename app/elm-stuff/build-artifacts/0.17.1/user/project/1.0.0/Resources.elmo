var _user$project$Resources$customGetResources = A2(
	_evancz$elm_http$Http$send,
	_evancz$elm_http$Http$defaultSettings,
	{
		verb: 'GET',
		headers: _elm_lang$core$Native_List.fromArray(
			[
				{ctor: '_Tuple2', _0: 'Accept', _1: 'application/json'},
				{ctor: '_Tuple2', _0: 'Content-Type', _1: 'application/json'},
				{ctor: '_Tuple2', _0: 'Authorization', _1: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidXNlcm5hbWUiOiJnYWJlIiwiaWF0IjoxNDc0MTQxMTkwfQ.Hpydi6C7Hr0f8aNbZtY3G8ybrjynmjITuZgsqt3MrZs'}
			]),
		url: 'http://localhost:3000/resources',
		body: _evancz$elm_http$Http$empty
	});
var _user$project$Resources$formView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(model.helloWorld)
					])),
				A2(
				_elm_lang$html$Html$p,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(model.pageName)
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$h3,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('New Resource')
							])),
						A2(
						_elm_lang$html$Html$form,
						_elm_lang$core$Native_List.fromArray(
							[]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('text'),
										_elm_lang$html$Html_Attributes$placeholder('Category')
									]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$br,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('text'),
										_elm_lang$html$Html_Attributes$placeholder('Subcategory')
									]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$br,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('text'),
										_elm_lang$html$Html_Attributes$placeholder('Title')
									]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$br,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('text'),
										_elm_lang$html$Html_Attributes$placeholder('Text')
									]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$br,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[])),
								A2(
								_elm_lang$html$Html$input,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$type$('submit')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text('Submit')
									]))
							]))
					])),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$Resources$view = function (model) {
	var showResource = function (resource) {
		return A2(
			_elm_lang$html$Html$div,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html_Attributes$class('panel panel-default')
				]),
			_elm_lang$core$Native_List.fromArray(
				[
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$class('panel-heading')
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$h3,
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html_Attributes$class('panel-title')
								]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text(resource.title)
								])),
							A2(
							_elm_lang$html$Html$h5,
							_elm_lang$core$Native_List.fromArray(
								[]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text(resource.category)
								])),
							A2(
							_elm_lang$html$Html$h6,
							_elm_lang$core$Native_List.fromArray(
								[]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text(resource.subcategory)
								]))
						])),
					A2(
					_elm_lang$html$Html$div,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$html$Html_Attributes$class('panel-body')
						]),
					_elm_lang$core$Native_List.fromArray(
						[
							A2(
							_elm_lang$html$Html$div,
							_elm_lang$core$Native_List.fromArray(
								[]),
							_elm_lang$core$Native_List.fromArray(
								[
									_elm_lang$html$Html$text(resource.text)
								]))
						]))
				]));
	};
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$ul,
				_elm_lang$core$Native_List.fromArray(
					[]),
				A2(_elm_lang$core$List$map, showResource, model.resources)),
				A2(
				_elm_lang$html$Html$hr,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[]))
			]));
};
var _user$project$Resources$Model = F4(
	function (a, b, c, d) {
		return {helloWorld: a, pageName: b, message: c, resources: d};
	});
var _user$project$Resources$ResourceInfo = F6(
	function (a, b, c, d, e, f) {
		return {id: a, category: b, subcategory: c, title: d, agent_id: e, text: f};
	});
var _user$project$Resources$resourceInfoDecoder = A7(
	_elm_lang$core$Json_Decode$object6,
	_user$project$Resources$ResourceInfo,
	A2(_elm_lang$core$Json_Decode_ops[':='], 'id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'category', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'subcategory', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'title', _elm_lang$core$Json_Decode$string),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'agent_id', _elm_lang$core$Json_Decode$int),
	A2(_elm_lang$core$Json_Decode_ops[':='], 'text', _elm_lang$core$Json_Decode$string));
var _user$project$Resources$resourceInfoListDecoder = _elm_lang$core$Json_Decode$list(_user$project$Resources$resourceInfoDecoder);
var _user$project$Resources$Request = F4(
	function (a, b, c, d) {
		return {verb: a, headers: b, url: c, body: d};
	});
var _user$project$Resources$ResourcesFetched = function (a) {
	return {ctor: 'ResourcesFetched', _0: a};
};
var _user$project$Resources$ErrorOccurred = function (a) {
	return {ctor: 'ErrorOccurred', _0: a};
};
var _user$project$Resources$getResources = A3(
	_elm_lang$core$Task$perform,
	_user$project$Resources$ErrorOccurred,
	_user$project$Resources$ResourcesFetched,
	A2(
		_elm_lang$core$Task$mapError,
		_elm_lang$core$Basics$toString,
		A2(_evancz$elm_http$Http$get, _user$project$Resources$resourceInfoListDecoder, 'https://clarkeagency.herokuapp.com/resources')));
var _user$project$Resources$initModel = function () {
	var model = {
		helloWorld: 'Hello World!',
		pageName: 'Resources',
		message: 'Click to get Resources',
		resources: _elm_lang$core$Native_List.fromArray(
			[])
	};
	return A2(
		_elm_lang$core$Platform_Cmd_ops['!'],
		model,
		_elm_lang$core$Native_List.fromArray(
			[_user$project$Resources$getResources]));
}();
var _user$project$Resources$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NoOp':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					model,
					_elm_lang$core$Native_List.fromArray(
						[]));
			case 'GetResources':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{message: 'Getting resources'}),
					_elm_lang$core$Native_List.fromArray(
						[_user$project$Resources$getResources]));
			case 'ErrorOccurred':
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{
							message: A2(_elm_lang$core$Basics_ops['++'], 'An error occurred: ', _p0._0)
						}),
					_elm_lang$core$Native_List.fromArray(
						[]));
			default:
				return A2(
					_elm_lang$core$Platform_Cmd_ops['!'],
					_elm_lang$core$Native_Utils.update(
						model,
						{resources: _p0._0, message: 'Retrieved resources'}),
					_elm_lang$core$Native_List.fromArray(
						[]));
		}
	});
var _user$project$Resources$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _user$project$Resources$initModel,
			update: _user$project$Resources$update,
			view: _user$project$Resources$view,
			subscriptions: function (_p1) {
				return _elm_lang$core$Platform_Sub$none;
			}
		})
};
var _user$project$Resources$GetResources = {ctor: 'GetResources'};
var _user$project$Resources$NoOp = {ctor: 'NoOp'};
var _user$project$Resources$BadResponse = F2(
	function (a, b) {
		return {ctor: 'BadResponse', _0: a, _1: b};
	});
var _user$project$Resources$UnexpectedPayload = function (a) {
	return {ctor: 'UnexpectedPayload', _0: a};
};
var _user$project$Resources$NetworkError = {ctor: 'NetworkError'};
var _user$project$Resources$Timeout = {ctor: 'Timeout'};
